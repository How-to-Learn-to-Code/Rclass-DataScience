?read.csv
options(digits = 3)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
getwd()
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
getwd()
options(digits = 3)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("~/Documents/GitHub/Rclass-DataScience/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
head(cell_props)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("Rclass-DataScience/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
getwd()
setwd("~/Documents/GitHub/Rclass-DataScience")
options(digits = 3)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("Rclass-DataScience/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
setwd("~/Documents/GitHub/Rclass-DataScience")
options(digits = 3)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
options(digits = 3)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
getwd()
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("~/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
getwd()
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("Rclass-DataScience/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("~/Documents/GitHub/Rclass-DataScience/scripts/03_dataWrangling/wrangling-filescellProportions.csv",
row.names = 1)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("~/Documents/GitHub/Rclass-DataScience/scripts/03_dataWrangling/wrangling-files/cellProportions.csv",
row.names = 1)
setwd("~/Documents/GitHub/Rclass-DataScience/scripts/03_dataWrangling/wrangling-files")
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv("cellProportions.csv",
row.names = 1)
getwd()
renv::install("tidyverse") # install from GitHub
setwd("~/Documents/GitHub/Rclass-DataScience/scripts/03_dataWrangling")
cell_phenos <- read_csv("wrangling-files/cellPhenotypes.csv")
options(digits = 3)
if(!require("Rccp")){
install.packages("Rccp",repos = "http://cran.us.r-project.org",quiet = TRUE,verbose = FALSE)
}
if(!require("readr")){
install.packages("readr",repos = "http://cran.us.r-project.org",quiet = TRUE,verbose = FALSE)
}
library(readr)
cell_phenos <- read_csv("wrangling-files/cellPhenotypes.csv")
str(cell_phenos)
View(cell_props)
rowSums(cell_props)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read_csv("wrangling-files/cellProportions.csv")
head(cell_props)
rowSums(cell_props)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read_csv("wrangling-files/cellProportions.csv")
head(cell_props)
rowSums(cell_props)
?read_csv
cell_phenos <- read_csv("wrangling-files/cellPhenotypes.csv",row.names = 1)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv2("wrangling-files/cellProportions.csv")
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv2("wrangling-files/cellProportions.csv",row.names = 1)
head(cell_props)
rowSums(cell_props)
rowsu
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv2("wrangling-files/cellProportions.csv",
row.names = 1)
head(cell_props)
View(cell_props)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv2("wrangling-files/cellProportions.csv",
row.names = 1,header = TRUE)
head(cell_props)
library(readr)
cellProportions <- read_csv("wrangling-files/cellProportions.csv")
View(cellProportions)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv2("wrangling-files/cellProportions.csv",
row.names = 1,header = TRUE,sep = ",")
cell_props
row.names = 1,sep = ",)
cell_phenos <- read.csv2("wrangling-files/cellPhenotypes.csv",
row.names = 1,sep = ",")
cell_phenos
str(cell_phenos)
View(cell_phenos)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.csv2("wrangling-files/cellProportions.csv",
row.names = 1,header = TRUE,sep = ",")
head(cell_props)
rowSums(cell_props)
View(cellProportions)
,
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.table("wrangling-files/cellProportions.csv",
row.names = 1,header = TRUE,sep = ",")
cell_props
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.table("wrangling-files/cellProportions.csv", sep = ",", row.names = 1)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.table("wrangling-files/cellProportions.csv",
row.names = 1,header = TRUE,sep = ",")
head(cell_props)
rowSums(cell_props)
cell_phenos <- read.table("wrangling-files/cellPhenotypes.csv",
row.names = 1,sep = ",")
str(cell_phenos)
# What unique values and how many of each are in the "genotype" field
table(cell_phenos$genotype)
# Table can also compare two variables. useNA need to be added to include cells with NAs
table(cell_phenos$type, cell_phenos$genotype,  useNA = "ifany")
# bind the rownames to see if they match
cbind(rownames(cell_phenos), rownames(cell_props)) |> head()
# Reorder one to match the other
# This uses the cell_phenos rownames as a list to specify the order of indices
cell_props <- cell_props[rownames(cell_phenos),]
# They should all be TRUE now
all(rownames(cell_phenos) == rownames(cell_props))
# Now we can merge them
data_bind <- cbind(cell_phenos, cell_props)
head(data_bind)
# Specify row.names as the feature to merge by
data_merge <- merge(cell_phenos, cell_props, by = "row.names")
head(data_merge)
library(tidyverse)
# cell types are specified with cols = and name the new column with names_to
# values originally in those columns are going to move to a new values column, which we can name with values_to =
data_long <- pivot_longer(data_merge,
cols = c(Cardiomyocytes, Fibroblast, Endothelial.Cells, Macrophage, Pericytes.SMC),
names_to = "cell.type", values_to = "proportion")
str(data_long)
data_long |>
mutate(id = as.character(Row.names)) |> # fix the AsIs type
ggplot(aes(x = id, y = proportion, fill = cell.type))+
geom_bar(position="fill", stat="identity")
data_long |>
filter(type != "whole_tissue") |>
mutate(id = as.character(Row.names)) |>
ggplot(aes(x = id, y = proportion, fill = cell.type))+
geom_bar(position="fill", stat="identity", color = "black", width = 1) +
facet_grid(cols=vars(type), scales = "free") +
scale_fill_manual(values = c("#66C2A5","#FC8D62", "#8DA0CB", "#E78AC3", "#A6D854")) +
theme_minimal() +
theme(
axis.title.x = element_blank(),
legend.title = element_blank(),
legend.position = "bottom"
) +
guides(x = guide_axis(angle = 45)) +
labs(title = "Cell type proportions in purified control samples",
y = "Cell Type Proportion")
View(data_bind)
cell_phenos <- read.table("wrangling-files/cellPhenotypes.csv",
row.names = 1,sep = ",",header = TRUE)
str(cell_phenos)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.table("wrangling-files/cellProportions.csv",
row.names = 1,header = TRUE,sep = ",")
head(cell_props)
rowSums(cell_props)
rowSums(cell_props)
rowSums(cell_props)
rowSums(cell_props)
rowSums(cell_props)
# Load the data. The sample IDs were stored as the first row, so lets make those the row.names
cell_props <- read.table("wrangling-files/cellProportions.csv",
row.names = 1,header = TRUE,sep = ",")
head(cell_props)
rowSums(cell_props)
cell_phenos <- read.table("wrangling-files/cellPhenotypes.csv",
row.names = 1,sep = ",",header = TRUE)
str(cell_phenos)
renv::status()
?renv::status
